db.createCollection("Juego", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      title: "Validador de juegos",
      required: [
        "id",
        "nombre",
        "modelo",
        "estadoOperativo",
        "accesibilidad",
        "fechaInstalacion",
        "tipo",
        "desgasteAcumulado",
        "indicadorExposicion",
        "mantenimientos",
        "incidencias"
      ],
      properties: {
        id: {
          bsonType: "string",
          description: "Id del juego; es obligatorio y debe ser un string."
        },
        nombre: {
          bsonType: "string",
          description: "Nombre del juego; es obligatorio y debe ser un string."
        },
        modelo: {
          bsonType: "string",
          description: "Modelo del juego; es obligatorio y debe ser un string."
        },
        estadoOperativo: {
          bsonType: "string",
          enum: ["EN MANTENIMIENTO", "OPERATIVO", "NO OPERATIVO"],
          description: "Estado actual del juego; debe ser EN MANTENIMIENTO, OPERATIVO o NO OPERATIVO."
        },
        accesibilidad: {
          bsonType: "bool",
          description: "Indica si el juego es accesible a personas con discapacidad; debe ser un booleano."
        },
        fechaInstalacion: {
          bsonType: "date",
          description: "Fecha de instalación del juego; debe ser una fecha."
        },
        tipo: {
          bsonType: "string",
          enum: ["DEPORTIVO", "INFANTIL", "MAYORES"],
          description: "Tipo de juego; debe ser DEPORTIVO, INFANTIL o MAYORES."
        },
        desgasteAcumulado: {
          bsonType: "int",
          description: "Desgaste acumulado del juego; debe ser un entero."
        },
        indicadorExposicion: {
          bsonType: "string",
          enum: ["Alto", "Medio", "Bajo"],
          description: "Indicador de la exposición del juego; debe ser Alto, Medio o Bajo."
        },
        ultimaFechaMantenimiento: {
          bsonType: ["date"],
          description: "Última fecha de mantenimiento del juego; debe ser una fecha, si está presente."
        },
        mantenimientos: {
          bsonType: "array",
          description: "Referencias a los mantenimientos del juego; debe ser un array de IDs de Mantenimiento.",
          items: {
            bsonType: "string"
          }
        },
        incidencias: {
          bsonType: "array",
          description: "Referencias a las incidencias del juego; debe ser un array de objetos de tipo incidencia.",
          items: {
            title: "incidencia",
            bsonType: "object",
            required: ["id", "tipoIncidencia", "fechaReporte", "estado"],
            properties: {
              id: {
                bsonType: "string",
                description: "ID de la incidencia referenciada; debe ser un string y es obligatorio."
              },
              tipoIncidencia: {
                bsonType: "string",
                enum: ["Desgaste", "Rotura", "Vandalismo", "Mal funcionamiento"],
                description: "Tipo de la incidencia; debe ser Desgaste, Rotura, Vandalismo o Mal funcionamiento."
              },
              fechaReporte: {
                bsonType: "date",
                description: "Fecha en la que se reportó la incidencia; debe ser una fecha."
              },
              estado: {
                bsonType: "string",
                enum: ["Abierta", "Cerrada"],
                description: "Estado actual de la incidencia; debe ser Abierta o Cerrada."
              }
            }
          }
        }
      }
    }
  }
});
db.Juegos.createIndex({id: 1}, {unique: true});
